
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author alexandrezamberlan
 * @author sylviovieira
 * @autor anajulia
 * @author carlosbau
 */
public class Tela extends javax.swing.JFrame {

    /**
     * Creates new form Tela
     */
    public Tela() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel_logoNano = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaListaValoresOriginais = new javax.swing.JTextArea();
        jLabelListaValoresOriginais = new javax.swing.JLabel();
        jLabelSobre = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaFrequencia = new javax.swing.JTextArea();
        jLabelFrequencia = new javax.swing.JLabel();
        jButtonCarregarArquivo = new javax.swing.JButton();
        jLabelMedia = new javax.swing.JLabel();
        jTextFieldMedia = new javax.swing.JTextField();
        jLabelModa = new javax.swing.JLabel();
        jTextFieldModa = new javax.swing.JTextField();
        jLabelMediana = new javax.swing.JLabel();
        jTextFieldMediana = new javax.swing.JTextField();
        jLabelVariancia = new javax.swing.JLabel();
        jTextFieldVariancia = new javax.swing.JTextField();
        jLabelDesvioPadrao = new javax.swing.JLabel();
        jTextFieldDesvioPadrao = new javax.swing.JTextField();
        jLabelErroPadrao = new javax.swing.JLabel();
        jTextFieldErroPadrao = new javax.swing.JTextField();
        jComboBoxDuvida = new javax.swing.JComboBox();
        jLabelCV = new javax.swing.JLabel();
        jTextFieldCV = new javax.swing.JTextField();
        jLabelAmostra = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaListaValoresAmostra = new javax.swing.JTextArea();
        jButtonCalcularAmostra = new javax.swing.JButton();
        jLabelMediaAmostra = new javax.swing.JLabel();
        jTextFieldMediaAmostra = new javax.swing.JTextField();
        jLabelDesvioPadraoAmostra = new javax.swing.JLabel();
        jTextFieldDesvioPadraoAmostra = new javax.swing.JTextField();
        jLabelErroPadrao1 = new javax.swing.JLabel();
        jTextFieldErroPadraoAmostra = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bioestatística - Variáveis de Medida Central");
        setResizable(false);

        jLabel_logoNano.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nano.png"))); // NOI18N

        jTextAreaListaValoresOriginais.setColumns(20);
        jTextAreaListaValoresOriginais.setRows(5);
        jScrollPane1.setViewportView(jTextAreaListaValoresOriginais);

        jLabelListaValoresOriginais.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabelListaValoresOriginais.setText("Valores");

        jLabelSobre.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabelSobre.setText("Sobre");
        jLabelSobre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabelSobreMousePressed(evt);
            }
        });

        jTextAreaFrequencia.setEditable(false);
        jTextAreaFrequencia.setColumns(20);
        jTextAreaFrequencia.setRows(5);
        jTextAreaFrequencia.setTabSize(2);
        jTextAreaFrequencia.setAutoscrolls(false);
        jScrollPane2.setViewportView(jTextAreaFrequencia);

        jLabelFrequencia.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabelFrequencia.setText("Frequência");

        jButtonCarregarArquivo.setText("Carregar Arquivo");
        jButtonCarregarArquivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButtonCarregarArquivoMousePressed(evt);
            }
        });

        jLabelMedia.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabelMedia.setText("Média");

        jTextFieldMedia.setEditable(false);

        jLabelModa.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabelModa.setText("Moda");

        jTextFieldModa.setEditable(false);
        jTextFieldModa.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N

        jLabelMediana.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabelMediana.setText("Mediana");

        jTextFieldMediana.setEditable(false);

        jLabelVariancia.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabelVariancia.setText("Variância");

        jTextFieldVariancia.setEditable(false);

        jLabelDesvioPadrao.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabelDesvioPadrao.setText("Desvio Padrão");

        jTextFieldDesvioPadrao.setEditable(false);

        jLabelErroPadrao.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabelErroPadrao.setText("Erro Padrão");

        jTextFieldErroPadrao.setEditable(false);

        jComboBoxDuvida.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Dúvida", "Média", "Moda", "Mediana", "Variância", "Desvio Padrão", "Erro Padrão", "Coeficiente" }));
        jComboBoxDuvida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDuvidaActionPerformed(evt);
            }
        });

        jLabelCV.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabelCV.setText("Coeficiente de Variação");

        jTextFieldCV.setEditable(false);

        jLabelAmostra.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabelAmostra.setText("Amostra");

        jTextAreaListaValoresAmostra.setColumns(20);
        jTextAreaListaValoresAmostra.setRows(5);
        jScrollPane3.setViewportView(jTextAreaListaValoresAmostra);

        jButtonCalcularAmostra.setText("Calcular");
        jButtonCalcularAmostra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCalcularAmostraActionPerformed(evt);
            }
        });

        jLabelMediaAmostra.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabelMediaAmostra.setText("Média da Amostra");

        jTextFieldMediaAmostra.setEditable(false);

        jLabelDesvioPadraoAmostra.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabelDesvioPadraoAmostra.setText("Desvio Padrão da Amostra");

        jTextFieldDesvioPadraoAmostra.setEditable(false);

        jLabelErroPadrao1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabelErroPadrao1.setText("Erro Padrão");

        jTextFieldErroPadraoAmostra.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonCarregarArquivo)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel_logoNano)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 429, Short.MAX_VALUE)
                                .addComponent(jLabelSobre))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(jLabelListaValoresOriginais)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabelFrequencia, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabelMedia)
                                    .addComponent(jLabelModa)
                                    .addComponent(jLabelMediana)
                                    .addComponent(jTextFieldMediana)
                                    .addComponent(jTextFieldModa)
                                    .addComponent(jTextFieldMedia)
                                    .addComponent(jLabelVariancia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldVariancia)
                                    .addComponent(jLabelDesvioPadrao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldDesvioPadrao)
                                    .addComponent(jLabelErroPadrao)
                                    .addComponent(jTextFieldErroPadrao)
                                    .addComponent(jLabelCV)
                                    .addComponent(jTextFieldCV))
                                .addGap(51, 51, 51)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabelAmostra, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabelMediaAmostra)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jComboBoxDuvida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jButtonCalcularAmostra, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabelDesvioPadraoAmostra)
                                            .addComponent(jLabelErroPadrao1)
                                            .addComponent(jTextFieldMediaAmostra, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextFieldDesvioPadraoAmostra, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextFieldErroPadraoAmostra, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(171, 171, 171)))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelSobre)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel_logoNano)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCarregarArquivo)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelListaValoresOriginais)
                    .addComponent(jLabelFrequencia)
                    .addComponent(jLabelMedia)
                    .addComponent(jComboBoxDuvida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelAmostra)
                    .addComponent(jLabelMediaAmostra))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jTextFieldMedia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabelModa)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextFieldModa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabelMediana)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextFieldMediana, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabelVariancia)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextFieldVariancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabelDesvioPadrao)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextFieldDesvioPadrao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabelErroPadrao)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextFieldErroPadrao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabelCV)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextFieldCV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldMediaAmostra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelDesvioPadraoAmostra)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldDesvioPadraoAmostra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelErroPadrao1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldErroPadraoAmostra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCalcularAmostra)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabelSobreMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelSobreMousePressed
        JOptionPane.showMessageDialog(this,
                "Sistema Controle Taxas Glicemia do Período"
                + "\nDisciplina de BioEstatística"
                + "\nProfessores: Eder Simão e Virginia Cielo Rech"
                + "\nAutores: Ana Julia Dalcin, Alexandre Zamberlan e Carlos Baú", "Sobre", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jLabelSobreMousePressed

    private void jButtonCarregarArquivoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCarregarArquivoMousePressed
        File arquivo;
        arquivo = Util.carregarArquivo();

        if (arquivo != null) {
            jTextAreaListaValoresOriginais.setText("");
            jTextAreaFrequencia.setText("");
            jTextFieldMedia.setText("");
            jTextFieldModa.setText("");
            jTextFieldMediana.setText("");
            jTextFieldVariancia.setText("");
            jTextFieldDesvioPadrao.setText("");
            jTextFieldErroPadrao.setText("");
            jComboBoxDuvida.setSelectedIndex(0);

            jTextAreaListaValoresAmostra.setText("");
            jTextFieldMediaAmostra.setText("");
            jTextFieldDesvioPadraoAmostra.setText("");
            jTextFieldErroPadraoAmostra.setText("");

            //para armazenar valores originais
            ArrayList listaValoresOriginais = new ArrayList();

            //para armazenar valores originais ordenados
            ArrayList listaValoresOriginaisOrdenados = new ArrayList();

            //para garantir controle de duplicidade
            ArrayList<Glicemia> listaValoresUnicos = new ArrayList<Glicemia>();

            try {
                BufferedReader entrada = new BufferedReader(new FileReader(arquivo));
                String linha;
                while (entrada.ready()) {
                    linha = entrada.readLine();
                    jTextAreaListaValoresOriginais.append(linha);
                    jTextAreaListaValoresOriginais.append("\n");
                    listaValoresOriginais.add(Integer.parseInt(linha));
                    listaValoresOriginaisOrdenados.add(Integer.parseInt(linha));
                }
                entrada.close();

                Util.ordenarListaPente(listaValoresOriginaisOrdenados);

                Util.descobrirFrequencia(listaValoresOriginaisOrdenados, listaValoresUnicos);

                //para preencher a JTArea Frequencia
                for (int i = 0; i < listaValoresUnicos.size(); i++) {
                    jTextAreaFrequencia.append(listaValoresUnicos.get(i).valor + " - " + listaValoresUnicos.get(i).ocorrencia);
                    jTextAreaFrequencia.append("\n");
                }

                double media = Util.calcularMedia(listaValoresOriginaisOrdenados);
                String sMedia = Double.toString(media);

                jTextFieldMedia.setText("" + (int) media + sMedia.substring(sMedia.indexOf('.'), sMedia.indexOf('.') + 3));
                jTextFieldModa.setText("" + Util.descobrirModa(listaValoresUnicos));
                jTextFieldMediana.setText("" + (int) Util.calcularMediana(listaValoresOriginaisOrdenados));

                double variancia = Util.calcularVariancia(listaValoresOriginais,
                        Double.parseDouble(jTextFieldMedia.getText().toString()), false);
                String sVariancia = Double.toString(variancia);
                jTextFieldVariancia.setText("" + (int) variancia + sVariancia.substring(sVariancia.indexOf('.'), sVariancia.indexOf('.') + 3));

                double desvio = Util.calcularDesvioPadrao(Double.parseDouble(jTextFieldVariancia.getText().toString()));
                String sDesvio = Double.toString(desvio);
                jTextFieldDesvioPadrao.setText("" + (int) desvio + sDesvio.substring(sDesvio.indexOf('.'), sDesvio.indexOf('.') + 3));

                double erro = Util.calcularErroPadrao(listaValoresOriginais,
                        Double.parseDouble(jTextFieldDesvioPadrao.getText().toString()));
                String sErro = Double.toString(erro);
                jTextFieldErroPadrao.setText("" + (int) erro + sErro.substring(sErro.indexOf('.'), sErro.indexOf('.') + 3));

                double cv = Util.calcularCoeficienteVariacao(Double.parseDouble(jTextFieldMedia.getText().toString()),
                        Double.parseDouble(jTextFieldDesvioPadrao.getText().toString()));
                String sCV = Double.toString(cv);
                jTextFieldCV.setText("" + (int) cv + sCV.substring(sCV.indexOf('.'), sCV.indexOf('.') + 3) + "%");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, e);
            }
        }
    }//GEN-LAST:event_jButtonCarregarArquivoMousePressed

    private void jComboBoxDuvidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDuvidaActionPerformed
        // TODO add your handling code here:
        ImageIcon icone;
        if (jComboBoxDuvida.getSelectedIndex() > 0) {
            switch (jComboBoxDuvida.getSelectedIndex()) {
                case 1:
                    icone = new ImageIcon("/Users/alexandrezamberlan/Documents/codigos/progJava/Bioestatistica/src/media.png");
                    JOptionPane.showMessageDialog(this,
                            "Média é a soma dos valores de um conjunto de\n"
                            + "dados dividido pelo número de valores", "Média", JOptionPane.INFORMATION_MESSAGE, icone);
                    break;

                case 2:
                    JOptionPane.showMessageDialog(rootPane,
                            "Moda é o valor ou valores mais frequentes. Pode ser:\n"
                            + "bimodal - possui dois valores modais;\n"
                            + "amodal - não possui moda;\n"
                            + "multimodal - possui mais do que dois valores modais.", "Moda", JOptionPane.INFORMATION_MESSAGE);
                    break;

                case 3:
                    JOptionPane.showMessageDialog(rootPane,
                            "Mediana é valor médio que separa as maiores\n"
                            + "e menores metades de um conjunto de dados.\n"
                            + "No caso de dados ordenados de amostras de tamanho n,\n"
                            + "se n for ímpar, a mediana será o elemento central.\n"
                            + "Se n for par, a mediana será o resultado da média simples\n"
                            + "entre os 2 elementos centrais", "Mediana", JOptionPane.INFORMATION_MESSAGE);
                    break;

                case 4:
                    icone = new ImageIcon("/Users/alexandrezamberlan/Documents/codigos/progJava/Bioestatistica/src/variancia.png");
                    JOptionPane.showMessageDialog(rootPane,
                            "Variância é uma medida de dispersão estatística, indicando\n"
                            + "\"o quão longe\" em geral os valores encontram-se de um valor esperado (ou média).\n"
                            + "Um método comum de estimar a variância da população é através\n"
                            + "da tomada de amostras. Quando estimando a variância da população\n"
                            + "usando n amostras aleatórias xi onde i = 1, 2, ..., n. ", "Variância", JOptionPane.INFORMATION_MESSAGE, icone);
                    break;

                case 5:
                    JOptionPane.showMessageDialog(rootPane,
                            "Desvio padrão é a medida mais comum da dispersão estatística.\n"
                            + "Ele mostra o quanto de variação ou \"dispersão\" existe em \n"
                            + "relação à média (ou valor esperado).\n"
                            + "Um baixo desvio padrão indica que os dados tendem a estar \n"
                            + "próximos da média; um desvio padrão alto indica que os dados\n"
                            + "estão espalhados por uma gama de valores.\n"
                            + "O desvio padrão define-se como a raiz quadrada da variância.", "Desvio Padrão", JOptionPane.INFORMATION_MESSAGE);
                    break;

                case 6:
                    icone = new ImageIcon("/Users/alexandrezamberlan/Documents/codigos/progJava/Bioestatistica/src/erroPadrao.png");
                    JOptionPane.showMessageDialog(rootPane,
                            "Ao se obter uma amostra qualquer de tamanho n, calcula-se a média\n"
                            + "aritmética populacional. Provavelmente, se uma nova amostra aleatória for\n"
                            + "realizada, a média aritmética obtida será diferente daquela da primeira\n"
                            + "amostra. A variabilidade das médias é estimada pelo seu erro padrão. Assim,\n"
                            + "o erro padrão avalia a precisão do cálculo da média populacional.\n"
                            + "Quanto melhor a precisão no cálculo da média populacional, menor será o\n"
                            + "erro padrão.", "Erro Padrão", JOptionPane.INFORMATION_MESSAGE, icone);
                    break;

                case 7:
                    icone = new ImageIcon("/Users/alexandrezamberlan/Documents/codigos/progJava/Bioestatistica/src/cv.png");
                    JOptionPane.showMessageDialog(rootPane,
                            "Coeficiente de variação de Pearson é uma medida de dispersão relativa\n"
                            + "empregada para estimar a precisão de experimentos e representa o \n"
                            + "desvio-padrão expresso como porcentagem da média. Sua principal\n"
                            + "qualidade é a capacidade de comparação de distribuições diferentes.\n"
                            + "Quanto menor o coeficiente, maior a precisão dos dados", "Coeficiente de Variação", JOptionPane.INFORMATION_MESSAGE, icone);
                    break;
            }
            jComboBoxDuvida.setSelectedIndex(0);
        }

    }//GEN-LAST:event_jComboBoxDuvidaActionPerformed

    private void jButtonCalcularAmostraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCalcularAmostraActionPerformed
        //para armazenar valores amostra
        ArrayList listaValoresAmostra = new ArrayList();

        if (jTextAreaListaValoresOriginais.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "É preciso carregar valores da população"
                    + "\na partir de um arquivo com dados!", "Aviso", JOptionPane.OK_OPTION);
            System.out.println("valores originais ausentes");
            return;
        }
        if (jTextAreaListaValoresAmostra.equals("")) {
            System.out.println("amostra vazia");
            return;
        }

        String[] sAmostra = jTextAreaListaValoresAmostra.getText().split("\n");
        for (String indice : sAmostra) {
            //System.out.print(indice);
            listaValoresAmostra.add(Integer.parseInt(indice));
        }

        double media = Util.calcularMedia(listaValoresAmostra);
        String sMedia = Double.toString(media);
        jTextFieldMediaAmostra.setText(sMedia);
        //jTextFieldMediaAmostra.setText("" + (int) media + sMedia.substring(sMedia.indexOf('.'), sMedia.indexOf('.') + 3));

        double variancia = Util.calcularVariancia(listaValoresAmostra,
                Double.parseDouble(jTextFieldMediaAmostra.getText().toString()), true);

        double desvio = Util.calcularDesvioPadrao(variancia);
        String sDesvio = Double.toString(desvio);
        jTextFieldDesvioPadraoAmostra.setText(sDesvio);

        desvio = Double.parseDouble(jTextFieldDesvioPadrao.getText());
        double erro = desvio / (Math.sqrt(listaValoresAmostra.size()));
        String sErro = Double.toString(erro);
        jTextFieldErroPadraoAmostra.setText(sErro);

    }//GEN-LAST:event_jButtonCalcularAmostraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCalcularAmostra;
    private javax.swing.JButton jButtonCarregarArquivo;
    private javax.swing.JComboBox jComboBoxDuvida;
    private javax.swing.JLabel jLabelAmostra;
    private javax.swing.JLabel jLabelCV;
    private javax.swing.JLabel jLabelDesvioPadrao;
    private javax.swing.JLabel jLabelDesvioPadraoAmostra;
    private javax.swing.JLabel jLabelErroPadrao;
    private javax.swing.JLabel jLabelErroPadrao1;
    private javax.swing.JLabel jLabelFrequencia;
    private javax.swing.JLabel jLabelListaValoresOriginais;
    private javax.swing.JLabel jLabelMedia;
    private javax.swing.JLabel jLabelMediaAmostra;
    private javax.swing.JLabel jLabelMediana;
    private javax.swing.JLabel jLabelModa;
    private javax.swing.JLabel jLabelSobre;
    private javax.swing.JLabel jLabelVariancia;
    private javax.swing.JLabel jLabel_logoNano;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextAreaFrequencia;
    private javax.swing.JTextArea jTextAreaListaValoresAmostra;
    private javax.swing.JTextArea jTextAreaListaValoresOriginais;
    private javax.swing.JTextField jTextFieldCV;
    private javax.swing.JTextField jTextFieldDesvioPadrao;
    private javax.swing.JTextField jTextFieldDesvioPadraoAmostra;
    private javax.swing.JTextField jTextFieldErroPadrao;
    private javax.swing.JTextField jTextFieldErroPadraoAmostra;
    private javax.swing.JTextField jTextFieldMedia;
    private javax.swing.JTextField jTextFieldMediaAmostra;
    private javax.swing.JTextField jTextFieldMediana;
    private javax.swing.JTextField jTextFieldModa;
    private javax.swing.JTextField jTextFieldVariancia;
    // End of variables declaration//GEN-END:variables
}
